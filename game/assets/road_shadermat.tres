[gd_resource type="ShaderMaterial" load_steps=6 format=2]

[ext_resource path="res://assets/road2Lane - road.jpg" type="Texture" id=1]
[ext_resource path="res://assets/road2Lane - road M.jpg" type="Texture" id=2]

[sub_resource type="Shader" id=1]
code = "shader_type spatial;
render_mode blend_mix,depth_draw_opaque,cull_disabled,diffuse_lambert,specular_schlick_ggx;
uniform vec4 albedo : hint_color;
uniform sampler2D texture_albedo : hint_albedo;
uniform float specular;
uniform float metallic;
uniform float roughness : hint_range(0,1);
uniform sampler2D texture_emission : hint_black_albedo;
uniform vec4 emission : hint_color;
uniform float emission_energy;
uniform float puddle_size : hint_range(0,1);
uniform vec2 roughness_scale;
uniform vec2 roughness_offset;
//uniform vec4 roughness_texture_channel;
uniform sampler2D reflect_texture: hint_black_albedo;

void fragment() {
	vec2 base_uv = UV;
	vec4 albedo_tex = texture(texture_albedo,base_uv);
	ALBEDO = albedo.rgb * albedo_tex.rgb;
	//float roughness_tex = dot(texture(reflect_texture,base_uv),roughness_texture_channel);
	//float roughness_tex = dot(texture(reflect_texture, base_uv), roughness_texture_channel);
	float reflect_tex = step(texture(reflect_texture, base_uv*roughness_scale.xy+roughness_offset.xy).r, 1.0-puddle_size);
	ROUGHNESS = reflect_tex * roughness;
	METALLIC = metallic * reflect_tex;
	//ROUGHNESS = roughness;
	SPECULAR = specular;
	vec3 emission_tex = texture(texture_emission,base_uv).rgb;
	EMISSION = (emission.rgb*emission_tex)*emission_energy;
}
"

[sub_resource type="OpenSimplexNoise" id=2]
octaves = 2

[sub_resource type="NoiseTexture" id=3]
width = 128
height = 128
noise = SubResource( 2 )

[resource]
shader = SubResource( 1 )
shader_param/albedo = Color( 1, 1, 1, 1 )
shader_param/specular = 0.5
shader_param/metallic = 0.0
shader_param/roughness = 1.0
shader_param/emission = Color( 0.00769043, 0.0916243, 0.984375, 1 )
shader_param/emission_energy = 4.0
shader_param/puddle_size = 0.0
shader_param/roughness_scale = Vector2( 1, 1 )
shader_param/roughness_offset = Vector2( 1, 1 )
shader_param/texture_albedo = ExtResource( 1 )
shader_param/texture_emission = ExtResource( 2 )
shader_param/reflect_texture = SubResource( 3 )
